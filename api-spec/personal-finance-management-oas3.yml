openapi: 3.0.3
x-asee-summary: "Personal Finance Management API"
x-asee-visibility: public
x-asee-icon: "&#xEA7E"
info:
  title: Personal Finance Management API
  description: >
    Personal Finance Management API allows analyze of a client's spending patterns against pre-defined budgets over time
  contact:
    name: Aleksandar Milošević
    url: https://bankapi.net/docs/public/serverless-getstarted.html
    email: aleksandar.milosevic@asseco-see.rs
  version: v1
tags:
- name: Transactions
  description: Working with finance transactions
- name: Categories
  description: Working PFM spending categories
- name: Analytics
  description: Working with client analytics
servers:
- description: Public mock
  url: https://bankapi.net/v1/pfm
- description: Local mock
  url: http://localhost:{port}
  variables:
    port:
      enum:
        - '6160'
      default: '6160'
paths:
  /transactions:
    get:
      tags:
      - Transactions
      summary: Get the list of transactions for current user
      description: Gets the list of transactions for authorized user
      operationId: Transactions_GetList
      parameters:
      - $ref: '#/components/parameters/transaction-kind-param'
      - $ref: '#/components/parameters/start-date-param'
      - $ref: '#/components/parameters/end-date-param'
      - $ref: 'https://bankapi.net/shared/v1#/components/parameters/page-param'
      - $ref: 'https://bankapi.net/shared/v1#/components/parameters/page-size-param'
      - $ref: 'https://bankapi.net/shared/v1#/components/parameters/sort-by-param'
      - $ref: 'https://bankapi.net/shared/v1#/components/parameters/sort-order-param'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction-paged-list'
        '400':
          $ref: 'https://bankapi.net/shared/v1#/components/responses/validation-error-response'
        default:
          $ref: 'https://bankapi.net/shared/v1#/components/responses/default-error-response'
  
  /transactions/import:
    post:
      tags:
      - Transactions
      summary: Import transactions
      description: Imports transactions
      operationId: Transactions_Import
      requestBody:
        description: Command to import transaction
        content:
          application/csv:
            schema:
              $ref: '#/components/schemas/transaction'
            example: |
              asdasd
              sdffsd
              asdasd
      responses:
        '200':
          description: OK - Transaction splitted
        '440':
          description: Your request was well constructed but it could not be processed due to business policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business-problem'
          x-asee-problems:
          - split-amount-over-transaction-amount
        '400':
          $ref: 'https://bankapi.net/shared/v1#/components/responses/validation-error-response'
        default:
          $ref: 'https://bankapi.net/shared/v1#/components/responses/default-error-response'

  /transaction/{id}/split:
    post:
      parameters:
      - $ref: '#/components/parameters/transaction-id-param'
      tags:
      - Transactions
      summary: Split transacation by id
      description: Splits transaction by id of the transaction
      operationId: Transactions_Split
      requestBody:
        description: Command to split transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/split-transaction-command'
      responses:
        '200':
          description: OK - Transaction splitted
        '440':
          description: Your request was well constructed but it could not be processed due to business policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business-problem'
          x-asee-problems:
          - split-amount-over-transaction-amount
        '400':
          $ref: 'https://bankapi.net/shared/v1#/components/responses/validation-error-response'
        default:
          $ref: 'https://bankapi.net/shared/v1#/components/responses/default-error-response'

  /transaction/{id}/categorize:
    post:
      parameters:
      - $ref: '#/components/parameters/transaction-id-param'
      tags:
      - Transactions
      summary: Categorize a transacation by id
      description: Categorizes the transaction by id of the transaction
      operationId: Transactions_Categorize
      requestBody:
        description: Command to categorize transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction-categorize-command'
      responses:
        '200':
          description: OK - Transaction splitted
        '440':
          description: Your request was well constructed but it could not be processed due to business policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business-problem'
          x-asee-problems:
          - provided-category-does-not-exists
        '400':
          $ref: 'https://bankapi.net/shared/v1#/components/responses/validation-error-response'
        default:
          $ref: 'https://bankapi.net/shared/v1#/components/responses/default-error-response'

  /categories/import:
    post:
      tags:
      - Categories
      summary: Import categories
      description: Imports categories
      operationId: Category_Improt
      requestBody:
        description: Command to import categories
        content:
          application/csv:
            schema:
              $ref: '#/components/schemas/category-csv'
      responses:
        '200':
          description: Categories imported
        '440':
          description: Your request was well constructed but it could not be processed due to business policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business-problem'
          x-asee-problems:
          - category-already-exists
        '400':
          $ref: https://bankapi.net/shared/v1#/components/responses/validation-error-response
        default:
          $ref: https://bankapi.net/shared/v1#/components/responses/default-error-response

  /categories:
    get:
      parameters:
      - $ref: '#/components/parameters/parent-id-param'
      tags:
      - Categories
      summary: Get the list of PFM categories
      description: Gets the list of root PEM categories if parent-id not provided
      operationId: Categories_GetList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category-list'
        '400':
          $ref: 'https://bankapi.net/shared/v1#/components/responses/validation-error-response'
        default:
          $ref: 'https://bankapi.net/shared/v1#/components/responses/default-error-response'

  /spending-analytics:
    get:
      tags:
      - Analytics
      parameters:
      - $ref: '#/components/parameters/catcode-param'
      - $ref: '#/components/parameters/start-date-param'
      - $ref: '#/components/parameters/end-date-param'
      - $ref: '#/components/parameters/direction-param'
      summary: Retrieve spending analytics by category or by subcategories witin category
      description: Retrieves spending analytics by category or by subcategories witin category
      operationId: Spendings_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/spendings-by-category'
        '400':
          $ref: 'https://bankapi.net/shared/v1#/components/responses/validation-error-response'
      
components:
  parameters:
    transaction-kind-param:
      name: transaction-kind
      in: query
      description: Filter by transaction kind
      required: false
      schema:
        type: string

    start-date-param:
      name: start-date
      in: query
      description: Transactions that starts from date
      required: false
      schema:
        type: string
        format: date-time

    end-date-param:
      name: end-date
      in: query
      description: Transactions that end until date
      required: false
      schema:
        type: string
        format: date-time
        
    parent-id-param:
      name: parent-id
      in: query
      description: Filter by parent-id
      required: false
      schema:
        type: string
        
    catcode-param:
      name: catcode
      in: query
      description: Category code for filtering spendings
      required: false
      schema:
        type: string

    direction-param:
      name: direction
      in: query
      description: Filter by transaction kind
      required: false
      schema:
        $ref: '#/components/schemas/directions-enum'

    transaction-id-param:
      name: id
      in: path
      description: Transaction Id path parameter
      required: true
      schema:
        type: string

  schemas:
    transaction-paged-list:
      type: object
      allOf:
      - $ref: 'https://bankapi.net/shared/v1#/components/schemas/paged-list'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/transaction-with-splits'
    
    split-transaction-command:
      type: object
      properties:
        splits:
          type: array
          items:
            $ref: '#/components/schemas/single-category-split'
      
    
    transaction-categorize-command:
      type: object
      required:
      - catcode
      properties:
        catcode:
          description: Code of category or subcategory to move transaction to
          type: string
    
    spendings-by-category:
      type: object
      properties:
        groups:
          type: array
          description: List of spendings by category
          items:
            $ref: '#/components/schemas/spending-in-category'
    
    spending-in-category:
      type: object
      properties:
        catcode:
          type: string
          description: Code of the category
        amount:
          type: number
          format: double
          description: Amount spent in category
        count:
          type: number
          description: Number of transactions included in group
    
    single-category-split:
      type: object
      required:
      - catcode
      - amount
      properties:
        catcode:
          description: Code of category or subcategory to split in
          type: string
        amount:
          type: number
          description: Amount to split to
          format: double
          
    transaction-with-splits:
      type: object
      allOf:
      - $ref: '#/components/schemas/transaction'
      - type: object
        properties:
          splits:
            type: array
            items:
              $ref: '#/components/schemas/single-category-split'

    transaction:
      type: object
      required:
      - id
      - date
      - direction
      - amount
      - currency
      - kind
      properties:
        id:
          description: Id of the transaction
          type: string
          readOnly: true
        beneficiary-name:
          type: string
        date:
          description: Date of the transaction  
          type: string
        direction:
          $ref: '#/components/schemas/directions-enum'
        amount:
          description: Transaction amount
          type: number
          format: double
        description:
          description: Transaction description
          type: string
        currency:
          maxLength: 3
          minLength: 3
          type: string
          description: Currency for transaction. ISO 4217 currency code.
        mcc:
          $ref: '#/components/schemas/mcc-code-enum'
        kind:
          $ref: '#/components/schemas/transaction-kinds-enum'
        catcode:
          type: string
          readOnly: true
          description: Code of category. If literal it's category, If number it is a sub category code.
    
    category-list:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/category'
    
    category-csv:
      type: object
      properties:
        code:
          description: Category code
          type: string
        parent-code:
          description: Parent code name
          type: string
        name:  
          description: Category or sub category name
          type: string
          
    
    category:
      type: object
      required:
      - code
      - name
      properties:
        id:
          description: Code of category
          type: string
          readOnly: true
        name:
          description: Name of the category
          type: string
        parent:
          description: Parent code if subcategory
          type: string

    business-problem:
      type: object
      properties:
        problem:
          $ref: '#/components/schemas/problem-literal'
        message:
          $ref: '#/components/schemas/problem-message'
        details:
          $ref: '#/components/schemas/problem-details'
      description: Explanation of business rule that rejected request
      
    problem-literal:
      type: string
      example: task-already-claimed
      description: Unique literal that identifies specific problem.
      x-asee-problem:
        - l: category-already-exists
          c: 57450
          m: 'Category already exists'
        - l: category-in-use
          c: 57451
          m: 'Cannot delete category as it is in use'
        - l: split-amount-over-transaction-amount
          c: 57452
          m: 'Split amount is larger then transaction amount'
        - l: provided-category-does-not-exists
          c: 47453
          m: 'Provided category does not exists'

    problem-message:
      type: string
      description: Message explaining the situation and optionaly remedies
      example: Task already claimed

    problem-details:
      type: string
      description: Optional details supplied for troubleshooting
      example: User john.doe has claimed the task
      
    directions-enum:
      enum:
      - d
      - c
      type: string
      description: Debit (`d`) for liabilities or credit (`c`) for assets
      x-asee-enum-doc:
      - l: d
        d: Debit
      - l: c
        d: Credit
  
    mcc-code-enum:
      enum:
      - 4814
      - 4815
      - 4821
      - 4829
      - 4899
      - 4900
      - 5013
      - 5021
      - 5039
      - 5044
      - 5045
      - 5046
      - 5047
      - 5051
      - 5065
      - 5072
      - 5074
      - 5085
      - 5094
      - 5099
      - 5111
      - 5122
      - 5131
      - 5137
      - 5139
      - 5169
      - 5172
      - 5192
      - 5193
      - 5198
      - 5199
      - 5200
      - 5211
      - 5231
      - 5231
      - 5231
      - 5251
      - 5261
      - 5271
      - 5300
      - 5309
      - 5310
      - 5311
      - 5331
      - 5399
      - 5411
      - 5411
      - 5422
      - 5422
      - 5441
      - 5441
      - 5441
      - 5451
      - 5462
      - 5499
      - 5511
      - 5521
      - 5531
      - 5532
      - 5533
      - 5541
      - 5542
      - 5551
      - 5561
      - 5571
      - 5592
      - 5598
      - 5611
      - 5621
      - 5631
      - 5641
      - 5651
      - 5655
      - 5661
      - 5681
      - 5691
      - 5697
      - 5698
      - 5699
      - 5712
      - 5713
      - 5714
      - 5718
      - 5719
      - 5722
      - 5732
      - 5733
      - 5734
      - 5735
      - 5811
      - 5812
      - 5813
      - 5814
      - 5912
      - 5921
      - 5931
      - 5832
      - 5933
      - 5935
      - 5937
      - 5940
      - 5941
      - 5942
      - 5943
      - 5944
      - 5945
      - 5946
      - 5947
      - 5948
      - 5949
      - 5950
      - 5960
      - 5961
      - 5962
      - 5963
      - 5964
      - 5965
      - 5967
      - 5968
      - 5969
      - 5970
      - 5971
      - 5972
      - 5973
      - 5975
      - 5976
      - 5977
      - 5978
      - 5983
      - 5992
      - 5993
      - 5994
      - 5995
      - 5996
      - 5997
      - 5998
      - 5999
      - 6010
      - 6011
      - 6012
      - 6051
      - 6211
      - 6300
      - 6381
      - 6399
      - 7011
      - 7012
      - 7032
      - 7033
      - 7210
      - 7211
      - 7216
      - 7217
      - 7221
      - 7230
      - 7251
      - 7261
      - 7273
      - 7276
      - 7277
      - 7278
      - 7296
      - 7297
      - 7298
      - 7299
      - 7311
      - 7321
      - 7332
      - 7333
      - 7338
      - 7339
      - 7342
      - 7342
      - 7349
      - 7361
      - 7372
      - 7375
      - 7379
      - 7392
      - 7393
      - 7394
      - 7395
      - 7399
      - 7512
      - 7513
      - 7519
      - 7523
      - 7531
      - 7534
      - 7535
      - 7538
      - 7542
      - 7549
      - 7622
      - 7623
      - 7629
      - 7631
      - 7641
      - 7692
      - 7699
      - 7829
      - 7832
      - 7841
      - 7911
      - 7922
      - 7929
      - 7932
      - 7933
      - 7941
      - 7991
      - 7992
      - 7993
      - 7994
      - 7995
      - 7996
      - 7997
      - 7998
      - 7999
      - 8011
      - 8021
      - 8031
      - 8041
      - 8042
      - 8043
      - 8044
      - 8049
      - 8050
      - 8062
      - 8071
      - 8099
      - 8111
      - 8211
      - 8220
      - 8241
      - 8244
      - 8249
      - 8299
      - 8351
      - 8398
      - 8641
      - 8651
      - 8661
      - 8675
      - 8699
      - 8734
      - 8911
      - 8931
      - 8999
      - 9211
      - 9222
      - 9223
      - 9311
      - 9399
      - 9402
      - 9405
      - 9700
      - 9701
      - 9702
      - 9950
    transaction-kinds-enum:
      enum:
      - dep
      - wdw
      - pmt
      - fee
      - inc
      - rev
      - adj
      - lnd
      - lnr
      - fcx
      - aop
      - acl
      - spl
      - sal
      type: string
      description: Enumeration that distinguishes between accounting transactions based on their effect on the customer accounts.
      x-asee-enum-doc:
      - l: dep
        d: Deposit
      - l: wdw
        d: Withdrawal
      - l: pmt
        d: Payment
      - l: fee
        d: Fee
      - l: inc
        d: Interest credit
      - l: rev
        d: Reversal
      - l: adj
        d: Adjustment
      - l: lnd
        d: Loan disbursement
      - l: lnr
        d: Loan repayment
      - l: fcx
        d: Foreign currency exchange
      - l: aop
        d: Account openning
      - l: acl
        d: Account closing
      - l: spl
        d: Split payment
      - l: sal
        d: Salary
